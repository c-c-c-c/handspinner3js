{"version":3,"sources":["../../src/script/script.js"],"names":["howManySpinners","scene","THREE","Scene","box","controls","renderer","camera","model","model2","model3","rotate_speed","r_radian","c_radian","geometry","material","scroll_px","delta_scroll_px","sum_delta_scroll_px","$window","$","window","renderHandSpinner","light","ambient","gridHelper","axisHelper","lightHelp","width","height","modelPath","DirectionalLight","position","set","add","AmbientLight","PerspectiveCamera","lookAt","i","WebGLRenderer","antialias","setSize","setClearColor","setPixelRatio","devicePixelRatio","document","getElementsByClassName","appendChild","domElement","loader","JSONLoader","load","geo","mat","phongMat","MeshPhongMaterial","Mesh","randX","Math","random","randY","randZ","scale","randColor","color","Color","opacity","transparent","render","requestAnimationFrame","rotation","y","sin","cameraZ","countScroll","scroll","before_scroll_px","console","log","scrollTop","addHoverImgChange","hover","children","each","attr","ready"],"mappings":"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","file":"script.js","sourcesContent":["let howManySpinners = 200;\nlet scene = new THREE.Scene();\nlet box;\nlet controls;\nlet renderer = [];\nlet camera;\nlet model = [];\n//let model = {};\nlet model2 = {};\nlet model3 = {};\nlet rotate_speed = 0.05;\nlet r_radian = 0;\nlet c_radian = 0;\nlet geometry;\nlet material;\nlet scroll_px = 0;\nlet delta_scroll_px = 0;\nlet sum_delta_scroll_px = 0.05;\nconst $window = $(window);\n\nfunction renderHandSpinner () {\n  'use strict';\n  let light;\n  let ambient;\n  let gridHelper;\n\tlet axisHelper;\n  let lightHelp;\n  let width = 960;\n  let height = 160;\n\tlet modelPath ;\n\n   //light\n  light = new THREE.DirectionalLight(0xffffff, 1);\n  light.position.set(0, 200, 80);\n  scene.add(light);\n  ambient = new THREE.AmbientLight(0x404040);\n  scene.add(ambient);\n\n\t//camera\n  camera = new THREE.PerspectiveCamera(45, 4, 1, 1000);\n  camera.position.set(0, 400, 300);\n  camera.lookAt(scene.position);\n\n  // helper 現在は非表示\n  //gridHelper = new THREE.GridHelper(200, 50);\n  //scene.add(gridHelper);\n  //axisHelper = new THREE.AxisHelper(1000);\n  //scene.add(axisHelper);\n  //lightHelper = new THREE.DirectionalLightHelper(light , 20)\n  //scene.add(lightHelper);\n\n  //controls\n\t//controls = new THREE.OrbitControls(camera);\n  //cameraの自動回転\n  //controls.autoRotate = true;\n // controls.autoRotateSpeed = 1.5;\n\n  // renderer\n  for (let i= 0 ; i < 4; i++ ) {\n  \trenderer[i] = new THREE.WebGLRenderer({ antialias: true });\n  \trenderer[i].setSize(width, height);\n  \trenderer[i].setClearColor(0xffffff);\n  \trenderer[i].setPixelRatio(window.devicePixelRatio);\n\n\t\tdocument.getElementsByClassName('stage')[i].appendChild(renderer[i].domElement);\n\t}\n\n  //modelPath = '../src/data/handspiner_3d_geo.json';\n  modelPath = './src/data/handspiner_3d_geo.json';\n\t//modelPath = '/Users/yoshimurahiroyuki/workspace/threejs/src/handspiner.json';\n\n  let loader = new THREE.JSONLoader();　　\n  loader.load(modelPath, function(geo, mat) {　　　\n\n    geometry = geo;\n    material = mat;\n\n\t\tfor (let i=0; i < howManySpinners; i++ ) {\n      let phongMat = new THREE.MeshPhongMaterial(mat);\n      model[i] = new THREE.Mesh(geo, phongMat);\n\n\t\t\tlet randX = 1800 * Math.random()-900;\n\t\t\tlet randY = 700 * Math.random()-150;\n\t\t\tlet randZ = 400 * Math.random()-200;\n\n      if (i==0) {\n\t\t\t\tmodel[i].position.set(0, 20, 0);\n\t\t\t} else {\n\t\t\t\tmodel[i].position.set(randX, randY, randZ);\n\t\t\t}　　\n\n    \tmodel[i].scale.set(0.5, 0.5, 0.5);　\n    \tlet randColor = Math.random() * 0xffffff ;　　　\n    \tmodel[i].material.color = new THREE.Color(randColor);\n    \tmodel[i].material.opacity = 0.3;\n\t\t\tmodel[i].material.transparent = true;\n\t\t\tscene.add(model[i]);　　　\n\t\t}\n    render();\n  });　\n}\n\n/*\nfunction addSpinner () {\n  let phongMat = new THREE.MeshPhongMaterial(material);\n  model = new THREE.Mesh(geometry, phongMat);\n\tlet randX = 800 * Math.random();\n\tlet randY = 800 * Math.random();\n\tlet randZ = 800 * Math.random();\n\n  let size = Math.random();\n\tmodel.scale.set(size, size, size);　　　\n  model.position.set(randX, randY, randZ);\n\tlet randColor = Math.random() * 0xffffff;　　　\n\tmodel.material.color = new THREE.Color(randColor);\n\tscene.add(model);　\n}\n*/\n\n\nfunction render () {\n\n  requestAnimationFrame(render);\n  r_radian += 0.01;\n\n\tfor (let i=0; i < howManySpinners; i++ ) {\n  \tif( delta_scroll_px < 0 )  {\n\t\t\trotate_speed = 0;\n\t\t\tsum_delta_scroll_px = 0;\n\t\t} else {\n\t\t\trotate_speed =  sum_delta_scroll_px/6000 + 0.05;\n\t\t}\n\n\t\tmodel[i].rotation.y += rotate_speed;\n    model[i].position.y += (Math.sin(r_radian) - Math.sin(r_radian-0.01))*150 ;\n\t}\n\n\tc_radian += 0.007;\n  let cameraZ = 150 * (Math.sin(c_radian)) +150;\n\tcamera.position.set(0, 600, cameraZ);\n\n\tfor (let i=0; i<4; i++) {\n  \trenderer[i].render(scene, camera);\n  \t//controls.update();\n\t}\n}\n\n\nfunction countScroll () {\n\t// スクロールしたら発動\n\t$window.scroll(function() {\n\t\tlet before_scroll_px = scroll_px;\n\t\tconsole.log(sum_delta_scroll_px);\n\t\t// スクロール量を変数に格納\n\t\tscroll_px = $(this).scrollTop();\n\t\tdelta_scroll_px = (scroll_px) - (before_scroll_px);\n\t\tsum_delta_scroll_px +=delta_scroll_px;\n\n\t});\n}\n\nfunction addHoverImgChange () {\n\t$( '.item_box' ).hover(()=>{\n\t\t\tconsole.log(\"hoge\");\n\t\t\tconsole.log($(this).children(\"img\"));\n\t\t\tconsole.log($(this).each());\n\t\t\t$(this).each(()=>{\n//\t\t\t$(this).children(\"img\").each(()=>{\n\t\t\t\tif ($(this).attr(\"class\") === \"not_spin\"  ){\n\t\t\t\t\t$(this).attr({\"display\" : \"none\"})\n\t\t\t\t\tconsole.log(\"come1\");\n\t\t\t\t} else {\n\t\t\t\t\t$(this).attr({\"display\" : \"inherit\"})\n\t\t\t\t\tconsole.log(\"come2\");\n\t\t\t\t}\n\t\t\t\tconsole.log(\"come3\");\n\n\t\t\t});\n\n\t},()=>{\n\t\tconsole.log(\"fuga\");\n\t});\n\n}\n\n/*\nfunction addHoverImgChange() {\n\tlet notSpinImages = document.getElementsByClassName(\"not_spin\")\n\tconst ImageN = 6;\n\tfor (i=0 ;i<6; i++ ){\n\t\tnotSpinImages[i].addEve\n\n\t}\n*/\n\n\n\n\n$(document).ready(function() {\n\t$(countScroll());\n\t$(addHoverImgChange());\n\trenderHandSpinner();\n});\n"]}